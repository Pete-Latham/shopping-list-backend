version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shopping-list-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: shopping_list
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shopping-list-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      # Infisical Configuration - these will be loaded from .env.local when available
      INFISICAL_TOKEN: ${INFISICAL_TOKEN:-}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID:-}
      INFISICAL_ENV: ${INFISICAL_ENV:-Production}
      INFISICAL_SITE_URL: ${INFISICAL_SITE_URL:-https://eu.infisical.com}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: shopping-list-network
